* gtk-tint

gtk-tint is a program designed to dynamically update your GTK theme to better match your system. It eliminates the need to create a new GTK theme every time you change your system theme.

** Status

[!NOTE] This project is still under active development.

** Repository Structure

*** gtk-tint.toml

This file, `gtk-tint.toml`, serves as the configuration file. It allows you to specify which theme to tint, how to tint it, and which colors to use for tinting.

*** main.sh

The `main.sh` script is responsible for parsing the base GTK theme. It prepares the base theme for the tinting script by extracting relevant values.

*** toml-parse.py

This script handles the toml parsing, because I couldn't find a good rust or bash implementation. It also converts the toml data into a form that the main script can use, namely an associated array where the keys are concatenations of the subtable values.

*** inputs/

The `inputs/` directory contains various scripts that determine how the accent colors are selected. If you want to integrate this tool with another program or extend gtk-tint's functionality, you can typically add a file in this directory.

There are two subdirectories within the `inputs/` directory: `accent` and `base-theme`. All input modules fall into one of those two categories. More info on them can be found in the modules page of the docs.

*** outputs/
The `outputs/` directory contains several directories (herein referred to as "output modules"). Each output module contains a script to execute to alter different aspects of the theme it targets, and a `.toml` file defining module-specific configurations. If you want gtk-tint to also apply to other aspects of your system, this is where you'd put code that does so.

*** tint-methods/
This directory contains the compiled binaries used to tint the colors. adding your own compiled scripts is also possible.

** MODULES
A module is a collection of scripts that can be run by GTK-tint to either read or write relevant data. Each module gets its own subdirectory, and contains an `invoke.sh` file. More information on modules can be found in the documentation section by the same name.
